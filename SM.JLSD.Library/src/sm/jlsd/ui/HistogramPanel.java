
package sm.jlsd.ui;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import sm.image.Histogram;

/**
 * Class HistogramPanel.
 * A JPanel where histograms can be plotted.
 * @author jlsuarezdiaz
 */
public class HistogramPanel extends javax.swing.JPanel {
    /**
     * Histogram.
     */
    private Histogram hist;
    
    /**
     * Design colors.
     */
    private static final Color rgba_colors[] = {Color.RED, Color.GREEN, Color.BLUE, Color.YELLOW};
    
    /**
     * Creates new form HistogramPanel
     */
    public HistogramPanel() {
        initComponents();
        setPreferredSize(new Dimension(820,400));
    }
    
    /**
     * Constuctor.
     * @param h Histogram to paint.
     */
    public HistogramPanel(Histogram h) {
        initComponents();
        this.hist = h;
        setPreferredSize(new Dimension(820,400));
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        if(hist != null){
            double data[][] = hist.getNormalizedHistogram();
            
            
            int height_margin = 20;
            int base_height = getHeight()-height_margin;
            int width_margin = 20;

            int width = (getWidth()-2*width_margin) / (data.length*data[0].length);
            
            Color c[];
            if(data.length >= 3) c = rgba_colors;
            else c = new Color[]{Color.BLACK};
            
            
            for(int i = 0; i < data.length; i++){
                g.setColor(c[i % c.length]);
                for(int j = 0; j < data[i].length; j++){
                    int val = (int)((getHeight()-2*height_margin)* data[i][j]);
                    int pos = j+i*data[i].length;
                    g.fillRect(width_margin + width*pos, base_height-val, width, val);
                   
                }
            }
            
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
